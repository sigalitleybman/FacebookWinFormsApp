<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Tjk5SBzBt2NpRESAJmMniv/Z
</value>
  </data>
</root>